//Subject Interface

public interface Image {
    void display();
}

//Real Subject Class

public class RealImage implements Image {
    private String fileName;

    public RealImage(String fileName) {
        this.fileName = fileName;
        loadFromServer();
    }

    private void loadFromServer() {
        System.out.println("Loading image from server: " + fileName);
        // Simulate loading image from server
        try {
            Thread.sleep(2000);
        } catch (InterruptedException e) {
            Thread.currentThread().interrupt();
        }
    }

    @Override
    public void display() {
        System.out.println("Displaying image: " + fileName);
    }
}

//Proxy Class

public class ProxyImage implements Image {
    private RealImage realImage;
    private String fileName;
    private boolean isLoaded = false;

    public ProxyImage(String fileName) {
        this.fileName = fileName;
    }

    @Override
    public void display() {
        if (!isLoaded) {
            realImage = new RealImage(fileName);
            isLoaded = true;
        }
        realImage.display();
    }
}


//Test Class

public class ImageTest {
    public static void main(String[] args) {
        Image image1 = new ProxyImage("image1.jpg");
        Image image2 = new ProxyImage("image2.jpg");

        // Image will be loaded from server only when display() is called
        image1.display();
        image2.display();

        // Image will not be loaded again, cached by proxy
        image1.display();
        image2.display();
    }
}

//Output:

Loading image from server: image1.jpg
Displaying image: image1.jpg
Loading image from server: image2.jpg
Displaying image: image2.jpg
Displaying image: image1.jpg
Displaying image: image2.jpg
